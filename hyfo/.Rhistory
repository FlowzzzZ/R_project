# Computing the linear correlation for the "best" case
rPearson(sim=sim, obs=obs)
# Randomly changing the first 2000 elements of 'sim', by using a normal distribution
# with mean 10 and standard deviation equal to 1 (default of 'rnorm').
sim[1:2000] <- obs[1:2000] + rnorm(2000, mean=10)
# Computing the new correlation value
rPearson(sim=sim, obs=obs)
data(EgaEnEstellaQts)
obs <- EgaEnEstellaQts
# Generating a simulated daily time series, initially equal to the observed series
sim <- obs
# Computing the linear correlation for the "best" case
rPearson(sim=sim, obs=obs)
# Randomly changing the first 2000 elements of 'sim', by using a normal distribution
# with mean 10 and standard deviation equal to 1 (default of 'rnorm').
sim[1:2000] <- obs[1:2000] + rnorm(2000, mean=10)
# Computing the new correlation value
rPearson(sim=sim, obs=obs)
getDefaultDB()
library(RSQLite)
getDefaultDB()
getDefaultDB()
getMetadata(table="OffsetType", Description="Ground Level")
#connect to standard database
getDefaultDB()
#add data
addOffsetType(Units="cm", Description="Above Ground Level")
getMetadata(table="OffsetType", Description="Ground Level")
getMetadata(table="OffsetType", Description="Ground Level")
library(geotopbricks)
Data60UK_catalogue_all <- catalogueData60UK()
library(hddtools)
Data60UK_catalogue_all <- catalogueData60UK()
View(Data60UK_catalogue_all)
Data60UK_catalogue_all <- catalogueData60UK()
View(Data60UK_catalogue_all)
GRDC_catalogue_all <- catalogueGRDC()
View(GRDC_catalogue_all)
library(hddtools)
GRDC_catalogue_all <- catalogueGRDC()
View(GRDC_catalogue_all)
View(MOPEX_catalogue_all)
MOPEX_catalogue_all <- catalogueMOPEX()
View(MOPEX_catalogue_all)
SEPA_catalogue_all <- catalogueSEPA()
View(SEPA_catalogue_all)
data(testdl)
TS <- testdl[[2]] # Get daily data
str(TS)
TS_new <- resample(TS, method = 'day2mon')
library(hyfo)
data(testdl)
TS <- testdl[[2]] # Get daily data
str(TS)
TS_new <- resample(TS, method = 'day2mon')
TS_new <- resample(TS, method = 'day2mon')
# Daily to monthly
data(testdl)
TS <- testdl[[2]] # Get daily data
str(TS)
TS_new <- resample(TS, method = 'day2mon')
library(hyfo)
data(testdl)
TS <- testdl[[2]] # Get daily data
str(TS)
TS_new <- resample(TS, method = 'day2mon')
TS <- data.frame(Date = seq(as.Date('1999-9-15'), length = 30, by = '1 month'),
runif(30, 3, 10))
TS_new <- resample(TS, method = 'mon2day')
data(testdl)
TS <- testdl[[2]] # Get daily data
str(TS)
TS_new <- resample(TS, method = 'day2mon')
require(dynatopmodel)
data("brompton")
obs <- aggregate_obs(list("rain"=brompton$rain, "pe"=brompton$pe), dt=15/60)
data("brompton")
obs <- aggregate_obs(list("rain"=brompton$rain, "pe"=brompton$pe), dt=15/60)
obs
View(obs)
View(obs[1])
View(obs[[1]])
View(obs[[2]])
View(obs[[1]])
data("brompton")
rain <- aggregate_xts(brompton$rain, dt=15/60)
View(rain)
data(OcaEnOnaQts)
d <- OcaEnOnaQts
sfreq(d)
library(hydroTSM)
data(OcaEnOnaQts)
d <- OcaEnOnaQts
sfreq(d)
data(OcaEnOnaQts)
d <- OcaEnOnaQts
sfreq(d)
#open internal file
file <- system.file("extdata", "testCat.shp", package = "hyfo")
catchment <- shp2cat(file)
catchment
#open internal file
file <- system.file("extdata", "testCat.shp", package = "hyfo")
catchment <- shp2cat(file)
catchment
file <- system.file("extdata", "testCat.shp", package = "hyfo")
catchment <- shp2cat(file)
filePath <- system.file("extdata", "tnc.nc", package = "hyfo")
# Then if you don't know the variable name, you can use \code{getNcdfVar} to get variable name
varname <- getNcdfVar(filePath)
nc <- loadNcdf(filePath, varname)
nc1 <- downscaleNcdf(nc, year = 2006, lon = c(-2, -0.5), lat = c(43.2, 43.7))
nc1 <- downscaleNcdf(nc, year = 2006, lon = c(-2, -0.5), lat = c(43.2, 43.7))
nc2 <- downscaleNcdf(nc, year = 2005, month = 3:8, lon = c(-2, -0.5), lat = c(43.2, 43.7))
nc1
View(nc1)
#open internal file
file <- system.file("extdata", "testCat.shp", package = "hyfo")
catchment <- shp2cat(file)
filePath <- system.file("extdata", "tnc.nc", package = "hyfo")
# Then if you don't know the variable name, you can use \code{getNcdfVar} to get variable name
varname <- getNcdfVar(filePath)
nc <- loadNcdf(filePath, varname)
# Then write to your work directory
nc1 <- downscaleNcdf(nc, year = 2006, lon = c(-2, -0.5), lat = c(43.2, 43.7))
nc2 <- downscaleNcdf(nc, year = 2005, month = 3:8, lon = c(-2, -0.5), lat = c(43.2, 43.7))
View(nc1
)
shiny::runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
install.packages("RODBC")
install.packages("RODBC")
install.packages("RODBC")
install.packages("RODBC")
runApp('H:/河海/R设计/程序代码')
install.packages("RODBC")
install.packages("hyfo")
install.packages("RODBC")
install.packages("RODBC")
install.packages("RODBC")
shiny::runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
help(odbcConnect)
runApp('H:/河海/R设计/程序代码')
channel <- odbcConnect("zhch", uid="root", case="1234")
channel <- odbcConnect("ssm_crud", uid="root", case="1234")
library(RODBC)
channel <- odbcConnect("ssm_crud", uid="root", case="1234")
channel <- odbcConnect(ssm_crud, uid="root", case="1234")
channel <- odbcDriverConnect("")
channel <- odbcConnect("ssm_crud", uid="root", case="1234")
library(RODBC)
channel <- odbcConnect("ssm_crud", uid="root", case="1234")
channel <- odbcConnect("ssm_crud", uid="root", case="1234")
library(RODBC)
channel <- odbcConnect("ssm_crud", uid="root", case="1234")
channel <- odbcConnect("localhost", uid="root", case="1234")
channel <- odbcConnect("ssm_crud", uid="root", case="1234")
channel <- odbcConnect("zhchdata", uid="root", case="1234")
shiny::runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
minMaxDate=sqlQuery(channel,"SELECT min(tm) as min_date, max(tm) as max_date FROM zhch.test_w")
channel <- odbcConnect("zhchdata", uid="root", case="1234")
library(RODBC)
odbcConnect("zhchdata", uid="root", case="1234")
runApp('H:/河海/R设计/程序代码')
channel=odbcConnect("zhchdata", uid="root", pwd="1234")
minMaxDate=sqlQuery(channel,"SELECT min(tm) as min_date, max(tm) as max_date FROM zhch.test_w")
channel=odbcConnect("zhchdata", uid="root", pwd="1234")
channel=odbcConnect("zhchdata", uid="root", pwd="1234")
channel
minMaxDate=sqlQuery(channel,"SELECT min(tm) as min_date, max(tm) as max_date FROM zhch.test_w")
minMaxDate
View(minMaxDate)
View(minMaxDate)
runApp('H:/河海/R设计/程序代码')
as.Date(minMaxDate$min_date)
minMaxDate$min_date
Date(minMaxDate$min_date)
as.Date(minMaxDate$max_date
)
as.Date(minMaxDate$min_date)
as.Date(minMaxDate$min_date) + 1
seq.Date(
as.Date(minMaxDate$min_date) + 1,
as.Date(minMaxDate$max_date)
)
seq.Date(
as.Date(minMaxDate$min_date) + 1,
as.Date(minMaxDate$max_date),
by = "months"
)
mip("1961-01-01", "1961-12-31")
library(hydroTSM)
mip("1961-01-01", "1961-12-31")
as.Date(minMaxDate$max_date)
channel=odbcConnect("zhchdata", uid="root", pwd="1234")
minMaxDate=sqlQuery(channel,"SELECT min(tm) as min_date, max(tm) as max_date FROM zhch.test_w")
View(minMaxDate)
channel=odbcConnect("zhchdata", uid="root", pwd="1234")
minMaxDate=sqlQuery(channel,"SELECT min(tm) as min_date, max(tm) as max_date FROM zhch.test_w")
View(minMaxDate)
channel=odbcConnect("zhchdata", uid="root", pwd="1234")
minMaxDate=sqlQuery(channel,"SELECT min(tm) as min_date, max(tm) as max_date FROM zhch.test_w")
View(minMaxDate)
channel=odbcConnect("zhchdata", uid="root", pwd="1234")
minMaxDate=sqlQuery(channel,"SELECT min(tm) as min_date, max(tm) as max_date FROM zhch.test_w")
View(minMaxDate)
minMaxDate=sqlQuery(channel,"SELECT max(tm) as min_date, max(tm) as max_date FROM zhch.test_w")
View(minMaxDate)
minMaxDate=sqlQuery(channel,"SELECT min(tm) as min_date, max(tm) as max_date FROM zhch.test_w")
View(minMaxDate)
minMaxDate$min_date)
minMaxDate$min_date
as.Date(minMaxDate$min_date)
mip(minMaxDate$min_date, minMaxDate$max_date)
mip(minMaxDate$min_date, minMaxDate$max_date)
mip("minMaxDate$min_date", "minMaxDate$max_date")
mip(as.Date(minMaxDate$min_date),as.Date(minMaxDate$max_date))
as.Date(minMaxDate$max_date)
seq.Date(
as.Date(minMaxDate$min_date) + 1,
as.Date(minMaxDate$max_date),
by = "months"
)
mip(as.Date(minMaxDate$min_date)+1,as.Date(minMaxDate$max_date))
as.Date(minMaxDate$min_date) + 2
help(rev)
rev(1:7)
help(format.Date)
format(Sys.Date(), "%a %b %d")
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
install.packages("RODBC")
install.packages("RODBC")
help(paste0)
paste0(1:12)
sqlQuery(
channel,
paste0(
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='",
month,
"' and stcd='",
site,
"' group by days"
)
)
paste0(1:12, c("st", "nd", "rd", rep("th", 9)))
sqlQuery(
channel,
paste0(
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='",
"2015-01-01",
"' and stcd='",
"12910540",
"' group by days"
)
)
data11=sqlQuery(
channel,
paste0(
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='",
"2015-01-01",
"' and stcd='",
"12910540",
"' group by days"
)
)
data11
data11=sqlQuery(
channel,
paste0(
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='",
"2015-01-01",
"' and stcd='",
"彭家岗",
"' group by days"
)
)
data11
paste0(
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='",
"2015-01-01",
"' and stcd='",
"彭家岗",
"' group by days"
)
data11=sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01-01' and stcd='彭家岗' group by days"
)
data11
data11=sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01-01'"
)
sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01-01'"
)
sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'"
)
data11=sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01' and stcd='彭家岗' group by days"
)
sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01' and stcd='彭家岗' group by days"
)
install.packages("RODBC")
sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01' and stcd='12910540' group by days"
)
sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540'"
)
sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' group by days"
)
sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' grouped by days"
)
sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' group by days"
)
sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' group by data"
)
sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' group by days"
)
paste0(
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='",
month,
"' and stcd='",
site,
"' group by days"
)
paste0(
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='",
2015-01,
"' and stcd='",
12910540,
"' group by days"
)
paste0(
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='",
"2015-01",
"' and stcd='",
"12910540",
"' group by days"
)
abc=sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' group by days"
)
View(abc)
abc=sqlQuery(
channel,
"select avg(rz) as data,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540'"
)
View(abc)
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp()
runApp('H:/河海/R设计/程序代码')
abc=sqlQuery(
channel,
"select avg(rz) as data and DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' group by days"
)
View(abc)
abc=sqlQuery(
channel,
"select avg(rz) as data ,DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' group by days"
)
View(abc)
abc=sqlQuery(
channel,
"select DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' group by days"
)
View(abc)
abc=sqlQuery(
channel,
"select DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540'"
)
View(abc)
library(RODBC)
abc=sqlQuery(
channel,
"select DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' group by days"
)
abc=sqlQuery(
channel,
"select DATE_FORMAT(test_w.tm,'%e') as days from test_w where DATE_FORMAT(test_w.tm,'%Y-%m')='2015-01'
and stcd='12910540' group by days"
)
View(abc)
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp()
runApp('H:/河海/R设计/程序代码')
help(t)
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp()
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp()
runApp('H:/河海/R设计/程序代码')
runApp()
runApp('H:/河海/R设计/程序代码')
install.packages("DT")
install.packages("DT")
shiny::runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
install.packages("xtable")
install.packages("xtable")
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
ll = list(1:5, 6:8)
transpose(ll)
library(data.table)
ll = list(1:5, 6:8)
transpose(ll)
ll = list(1:5)
transpose(ll)
runApp('H:/河海/R设计/程序代码')
dt = data.table(x=1:5, y=6:10)
transpose(dt)
transpose(dt)
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
runApp('H:/河海/R设计/程序代码')
